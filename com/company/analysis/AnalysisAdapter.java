/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.analysis;

import java.util.*;
import com.company.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMainProgram(AMainProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInitializedclInit(AInitializedclInit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARateinitInitializebody(ARateinitInitializebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncinitInitializebody(AFuncinitInitializebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASpeciesinitInitializebody(ASpeciesinitInitializebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberinitInitializebody(ANumberinitInitializebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAltervalueInitializebody(AAltervalueInitializebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASampleinitInitializebody(ASampleinitInitializebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringAltervalue(AStringAltervalue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatNumber(AFloatNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntNumber(AIntNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleFloats(AMultipleFloats node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoneFloats(ANoneFloats node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleIntegers(AMultipleIntegers node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoneIntegers(ANoneIntegers node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleSpecies(ASingleSpecies node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleSpecie(AMultipleSpecie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleSpecie(ASingleSpecie node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALambdaFuncFunc(ALambdaFuncFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiInput(AMultiInput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVoidInput(AVoidInput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleInput(ASingleInput node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatType(AFloatType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARateType(ARateType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADclRate(ADclRate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleRates(AMultipleRates node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleRates(ASingleRates node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermExpression(ATermExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOperatorExpression(AOperatorExpression node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressoinDouble(AExpressoinDouble node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusOperator(APlusOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusOperator(AMinusOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactorTerm(AFactorTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultTerm(AMultTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivideTerm(ADivideTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOptermPower(AOptermPower node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParenPower(AParenPower node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParentesesParen(AParentesesParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactorParen(AFactorParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPositivePolarity(APositivePolarity node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegativeParenPolarity(ANegativeParenPolarity node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntegerFactor(AIntegerFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariableFactor(AVariableFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatFactor(AFloatFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactorPowerIn(AFactorPowerIn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpressionPowerIn(AExpressionPowerIn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileLoop(AWhileLoop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleLogicalExprs(ASingleLogicalExprs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleLogicalExprs(AMultipleLogicalExprs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleLogicalExpr(ASingleLogicalExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrBoolOperator(AOrBoolOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndBoolOperator(AAndBoolOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGreaterEqualLogicalOperator(AGreaterEqualLogicalOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASmallerEqualLogicalOperator(ASmallerEqualLogicalOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGreaterLogicalOperator(AGreaterLogicalOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASmallerLogicalOperator(ASmallerLogicalOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqualLogicalOperator(AEqualLogicalOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotLogicalOperator(ANotLogicalOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotEqualLogicalOperator(ANotEqualLogicalOperator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADclTitration(ADclTitration node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleTitrations(ASingleTitrations node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleTitrations(AMultipleTitrations node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALoopTitrationEnd(ALoopTitrationEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemicolonTitrationEnd(ASemicolonTitrationEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALoopTitrationContinue(ALoopTitrationContinue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACommaTitrationContinue(ACommaTitrationContinue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARemoveTitrationdcl(ARemoveTitrationdcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddTitrationdcl(AAddTitrationdcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADoubleReaction(ADoubleReaction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleReactant(AMultipleReactant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusReactant(APlusReactant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringReactant(AStringReactant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleReactant(ASingleReactant node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOneWayArrows(AOneWayArrows node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATwoWayArrows(ATwoWayArrows node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncReactionRateI(AFuncReactionRateI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUnitReactionRateI(AUnitReactionRateI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReactionRateReactionRateIi(AReactionRateReactionRateIi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFCallFuncCall(AFCallFuncCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithParamFuncParen(AWithParamFuncParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoParamFuncParen(ANoParamFuncParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleFuncParameters(ASingleFuncParameters node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultipleFuncParameters(AMultipleFuncParameters node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleCrn(ASingleCrn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlockCrnfunc(ABlockCrnfunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASampleinitSample(ASampleinitSample node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABodySamplefunc(ABodySamplefunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARateSamplebody(ARateSamplebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberinitSamplebody(ANumberinitSamplebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAltervalueSamplebody(AAltervalueSamplebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASpeciesSamplebody(ASpeciesSamplebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncSamplebody(AFuncSamplebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACrnSamplebody(ACrnSamplebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATitsSamplebody(ATitsSamplebody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADclProtocol(ADclProtocol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEquiliProtocolbody(AEquiliProtocolbody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASampleProtocolbody(ASampleProtocolbody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADisposeProtocolbody(ADisposeProtocolbody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonzeroDisposePara(ANonzeroDisposePara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoneDisposePara(ANoneDisposePara node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMixSampleref(AMixSampleref node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASplitSampleref(ASplitSampleref node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiProtocolparam(AMultiProtocolparam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleProtocolparam(ASingleProtocolparam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiProtoexstend(AMultiProtoexstend node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleProtoexstend(ASingleProtoexstend node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleEquili(ASingleEquili node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATimeOption(ATimeOption node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACycleOption(ACycleOption node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemiExtendequili(ASemiExtendequili node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStepExtendequili(AStepExtendequili node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithTimestep(AWithTimestep node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANoTimestep(ANoTimestep node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTPlus(TTPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTMinus(TTMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTMult(TTMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTDiv(TTDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTEqual(TTEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTPower(TTPower node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTLambda(TTLambda node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTTime(TTTime node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTCycle(TTCycle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTSpace(TTSpace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTInt(TTInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTString(TTString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTFloat(TTFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTEqualOrGreater(TTEqualOrGreater node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTEqualOrSmaller(TTEqualOrSmaller node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTNot(TTNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTNotEqual(TTNotEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTAnd(TTAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTOr(TTOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTLogicalEqual(TTLogicalEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTGreater(TTGreater node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTSmaller(TTSmaller node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTComma(TTComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTColon(TTColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTSemicolon(TTSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTLParen(TTLParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTRParen(TTRParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTLTurborg(TTLTurborg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTRTurborg(TTRTurborg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTArrow(TTArrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTDoubleArrow(TTDoubleArrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTNewl(TTNewl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTDot(TTDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTComments(TTComments node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTBlank(TTBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTEol(TTEol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTAddmol(TTAddmol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTRemmol(TTRemmol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTInitializedcl(TTInitializedcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTSampledcl(TTSampledcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTSpeciesdcl(TTSpeciesdcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTRatedcl(TTRatedcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTFuncdcl(TTFuncdcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTFloatType(TTFloatType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTIntType(TTIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTRateType(TTRateType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTWhiledcl(TTWhiledcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTCrndcl(TTCrndcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTProtocoldcl(TTProtocoldcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTEquilibratedcl(TTEquilibratedcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTMixdcl(TTMixdcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTDisposedcl(TTDisposedcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTSplitdcl(TTSplitdcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTFordcl(TTFordcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTVoiddcl(TTVoiddcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTBydcl(TTBydcl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTEach(TTEach node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
