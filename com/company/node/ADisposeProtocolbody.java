/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ADisposeProtocolbody extends PProtocolbody
{
    private TTString _tString_;
    private TTDot _tDot_;
    private TTDisposedcl _tDisposedcl_;
    private PDisposePara _disposePara_;
    private TTSemicolon _tSemicolon_;

    public ADisposeProtocolbody()
    {
        // Constructor
    }

    public ADisposeProtocolbody(
        @SuppressWarnings("hiding") TTString _tString_,
        @SuppressWarnings("hiding") TTDot _tDot_,
        @SuppressWarnings("hiding") TTDisposedcl _tDisposedcl_,
        @SuppressWarnings("hiding") PDisposePara _disposePara_,
        @SuppressWarnings("hiding") TTSemicolon _tSemicolon_)
    {
        // Constructor
        setTString(_tString_);

        setTDot(_tDot_);

        setTDisposedcl(_tDisposedcl_);

        setDisposePara(_disposePara_);

        setTSemicolon(_tSemicolon_);

    }

    @Override
    public Object clone()
    {
        return new ADisposeProtocolbody(
            cloneNode(this._tString_),
            cloneNode(this._tDot_),
            cloneNode(this._tDisposedcl_),
            cloneNode(this._disposePara_),
            cloneNode(this._tSemicolon_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADisposeProtocolbody(this);
    }

    public TTString getTString()
    {
        return this._tString_;
    }

    public void setTString(TTString node)
    {
        if(this._tString_ != null)
        {
            this._tString_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tString_ = node;
    }

    public TTDot getTDot()
    {
        return this._tDot_;
    }

    public void setTDot(TTDot node)
    {
        if(this._tDot_ != null)
        {
            this._tDot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tDot_ = node;
    }

    public TTDisposedcl getTDisposedcl()
    {
        return this._tDisposedcl_;
    }

    public void setTDisposedcl(TTDisposedcl node)
    {
        if(this._tDisposedcl_ != null)
        {
            this._tDisposedcl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tDisposedcl_ = node;
    }

    public PDisposePara getDisposePara()
    {
        return this._disposePara_;
    }

    public void setDisposePara(PDisposePara node)
    {
        if(this._disposePara_ != null)
        {
            this._disposePara_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._disposePara_ = node;
    }

    public TTSemicolon getTSemicolon()
    {
        return this._tSemicolon_;
    }

    public void setTSemicolon(TTSemicolon node)
    {
        if(this._tSemicolon_ != null)
        {
            this._tSemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tString_)
            + toString(this._tDot_)
            + toString(this._tDisposedcl_)
            + toString(this._disposePara_)
            + toString(this._tSemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tString_ == child)
        {
            this._tString_ = null;
            return;
        }

        if(this._tDot_ == child)
        {
            this._tDot_ = null;
            return;
        }

        if(this._tDisposedcl_ == child)
        {
            this._tDisposedcl_ = null;
            return;
        }

        if(this._disposePara_ == child)
        {
            this._disposePara_ = null;
            return;
        }

        if(this._tSemicolon_ == child)
        {
            this._tSemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tString_ == oldChild)
        {
            setTString((TTString) newChild);
            return;
        }

        if(this._tDot_ == oldChild)
        {
            setTDot((TTDot) newChild);
            return;
        }

        if(this._tDisposedcl_ == oldChild)
        {
            setTDisposedcl((TTDisposedcl) newChild);
            return;
        }

        if(this._disposePara_ == oldChild)
        {
            setDisposePara((PDisposePara) newChild);
            return;
        }

        if(this._tSemicolon_ == oldChild)
        {
            setTSemicolon((TTSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
