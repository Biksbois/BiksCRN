/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ASingleSpecies extends PSpecies
{
    private TTSpeciesdcl _tSpeciesdcl_;
    private PSpecie _specie_;

    public ASingleSpecies()
    {
        // Constructor
    }

    public ASingleSpecies(
        @SuppressWarnings("hiding") TTSpeciesdcl _tSpeciesdcl_,
        @SuppressWarnings("hiding") PSpecie _specie_)
    {
        // Constructor
        setTSpeciesdcl(_tSpeciesdcl_);

        setSpecie(_specie_);

    }

    @Override
    public Object clone()
    {
        return new ASingleSpecies(
            cloneNode(this._tSpeciesdcl_),
            cloneNode(this._specie_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASingleSpecies(this);
    }

    public TTSpeciesdcl getTSpeciesdcl()
    {
        return this._tSpeciesdcl_;
    }

    public void setTSpeciesdcl(TTSpeciesdcl node)
    {
        if(this._tSpeciesdcl_ != null)
        {
            this._tSpeciesdcl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSpeciesdcl_ = node;
    }

    public PSpecie getSpecie()
    {
        return this._specie_;
    }

    public void setSpecie(PSpecie node)
    {
        if(this._specie_ != null)
        {
            this._specie_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._specie_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tSpeciesdcl_)
            + toString(this._specie_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tSpeciesdcl_ == child)
        {
            this._tSpeciesdcl_ = null;
            return;
        }

        if(this._specie_ == child)
        {
            this._specie_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tSpeciesdcl_ == oldChild)
        {
            setTSpeciesdcl((TTSpeciesdcl) newChild);
            return;
        }

        if(this._specie_ == oldChild)
        {
            setSpecie((PSpecie) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
