/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ASingleCrn extends PCrn
{
    private TTCrndcl _tCrndcl_;
    private PCrnfunc _crnfunc_;

    public ASingleCrn()
    {
        // Constructor
    }

    public ASingleCrn(
        @SuppressWarnings("hiding") TTCrndcl _tCrndcl_,
        @SuppressWarnings("hiding") PCrnfunc _crnfunc_)
    {
        // Constructor
        setTCrndcl(_tCrndcl_);

        setCrnfunc(_crnfunc_);

    }

    @Override
    public Object clone()
    {
        return new ASingleCrn(
            cloneNode(this._tCrndcl_),
            cloneNode(this._crnfunc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASingleCrn(this);
    }

    public TTCrndcl getTCrndcl()
    {
        return this._tCrndcl_;
    }

    public void setTCrndcl(TTCrndcl node)
    {
        if(this._tCrndcl_ != null)
        {
            this._tCrndcl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tCrndcl_ = node;
    }

    public PCrnfunc getCrnfunc()
    {
        return this._crnfunc_;
    }

    public void setCrnfunc(PCrnfunc node)
    {
        if(this._crnfunc_ != null)
        {
            this._crnfunc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crnfunc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tCrndcl_)
            + toString(this._crnfunc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tCrndcl_ == child)
        {
            this._tCrndcl_ = null;
            return;
        }

        if(this._crnfunc_ == child)
        {
            this._crnfunc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tCrndcl_ == oldChild)
        {
            setTCrndcl((TTCrndcl) newChild);
            return;
        }

        if(this._crnfunc_ == oldChild)
        {
            setCrnfunc((PCrnfunc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
