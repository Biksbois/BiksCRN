/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class AExpressionPowerIn extends PPowerIn
{
    private TTLParen _tLParen_;
    private PExpression _expression_;
    private TTRParen _tRParen_;

    public AExpressionPowerIn()
    {
        // Constructor
    }

    public AExpressionPowerIn(
        @SuppressWarnings("hiding") TTLParen _tLParen_,
        @SuppressWarnings("hiding") PExpression _expression_,
        @SuppressWarnings("hiding") TTRParen _tRParen_)
    {
        // Constructor
        setTLParen(_tLParen_);

        setExpression(_expression_);

        setTRParen(_tRParen_);

    }

    @Override
    public Object clone()
    {
        return new AExpressionPowerIn(
            cloneNode(this._tLParen_),
            cloneNode(this._expression_),
            cloneNode(this._tRParen_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpressionPowerIn(this);
    }

    public TTLParen getTLParen()
    {
        return this._tLParen_;
    }

    public void setTLParen(TTLParen node)
    {
        if(this._tLParen_ != null)
        {
            this._tLParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tLParen_ = node;
    }

    public PExpression getExpression()
    {
        return this._expression_;
    }

    public void setExpression(PExpression node)
    {
        if(this._expression_ != null)
        {
            this._expression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression_ = node;
    }

    public TTRParen getTRParen()
    {
        return this._tRParen_;
    }

    public void setTRParen(TTRParen node)
    {
        if(this._tRParen_ != null)
        {
            this._tRParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tRParen_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tLParen_)
            + toString(this._expression_)
            + toString(this._tRParen_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tLParen_ == child)
        {
            this._tLParen_ = null;
            return;
        }

        if(this._expression_ == child)
        {
            this._expression_ = null;
            return;
        }

        if(this._tRParen_ == child)
        {
            this._tRParen_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tLParen_ == oldChild)
        {
            setTLParen((TTLParen) newChild);
            return;
        }

        if(this._expression_ == oldChild)
        {
            setExpression((PExpression) newChild);
            return;
        }

        if(this._tRParen_ == oldChild)
        {
            setTRParen((TTRParen) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
