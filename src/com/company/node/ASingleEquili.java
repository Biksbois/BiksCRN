/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ASingleEquili extends PEquili
{
    private TTEquilibratedcl _tEquilibratedcl_;
    private TTString _tString_;
    private TTFordcl _tFordcl_;
    private PFactor _factor_;
    private POption _option_;
    private PExtendequili _extendequili_;

    public ASingleEquili()
    {
        // Constructor
    }

    public ASingleEquili(
        @SuppressWarnings("hiding") TTEquilibratedcl _tEquilibratedcl_,
        @SuppressWarnings("hiding") TTString _tString_,
        @SuppressWarnings("hiding") TTFordcl _tFordcl_,
        @SuppressWarnings("hiding") PFactor _factor_,
        @SuppressWarnings("hiding") POption _option_,
        @SuppressWarnings("hiding") PExtendequili _extendequili_)
    {
        // Constructor
        setTEquilibratedcl(_tEquilibratedcl_);

        setTString(_tString_);

        setTFordcl(_tFordcl_);

        setFactor(_factor_);

        setOption(_option_);

        setExtendequili(_extendequili_);

    }

    @Override
    public Object clone()
    {
        return new ASingleEquili(
            cloneNode(this._tEquilibratedcl_),
            cloneNode(this._tString_),
            cloneNode(this._tFordcl_),
            cloneNode(this._factor_),
            cloneNode(this._option_),
            cloneNode(this._extendequili_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASingleEquili(this);
    }

    public TTEquilibratedcl getTEquilibratedcl()
    {
        return this._tEquilibratedcl_;
    }

    public void setTEquilibratedcl(TTEquilibratedcl node)
    {
        if(this._tEquilibratedcl_ != null)
        {
            this._tEquilibratedcl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tEquilibratedcl_ = node;
    }

    public TTString getTString()
    {
        return this._tString_;
    }

    public void setTString(TTString node)
    {
        if(this._tString_ != null)
        {
            this._tString_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tString_ = node;
    }

    public TTFordcl getTFordcl()
    {
        return this._tFordcl_;
    }

    public void setTFordcl(TTFordcl node)
    {
        if(this._tFordcl_ != null)
        {
            this._tFordcl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tFordcl_ = node;
    }

    public PFactor getFactor()
    {
        return this._factor_;
    }

    public void setFactor(PFactor node)
    {
        if(this._factor_ != null)
        {
            this._factor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._factor_ = node;
    }

    public POption getOption()
    {
        return this._option_;
    }

    public void setOption(POption node)
    {
        if(this._option_ != null)
        {
            this._option_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._option_ = node;
    }

    public PExtendequili getExtendequili()
    {
        return this._extendequili_;
    }

    public void setExtendequili(PExtendequili node)
    {
        if(this._extendequili_ != null)
        {
            this._extendequili_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._extendequili_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tEquilibratedcl_)
            + toString(this._tString_)
            + toString(this._tFordcl_)
            + toString(this._factor_)
            + toString(this._option_)
            + toString(this._extendequili_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tEquilibratedcl_ == child)
        {
            this._tEquilibratedcl_ = null;
            return;
        }

        if(this._tString_ == child)
        {
            this._tString_ = null;
            return;
        }

        if(this._tFordcl_ == child)
        {
            this._tFordcl_ = null;
            return;
        }

        if(this._factor_ == child)
        {
            this._factor_ = null;
            return;
        }

        if(this._option_ == child)
        {
            this._option_ = null;
            return;
        }

        if(this._extendequili_ == child)
        {
            this._extendequili_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tEquilibratedcl_ == oldChild)
        {
            setTEquilibratedcl((TTEquilibratedcl) newChild);
            return;
        }

        if(this._tString_ == oldChild)
        {
            setTString((TTString) newChild);
            return;
        }

        if(this._tFordcl_ == oldChild)
        {
            setTFordcl((TTFordcl) newChild);
            return;
        }

        if(this._factor_ == oldChild)
        {
            setFactor((PFactor) newChild);
            return;
        }

        if(this._option_ == oldChild)
        {
            setOption((POption) newChild);
            return;
        }

        if(this._extendequili_ == oldChild)
        {
            setExtendequili((PExtendequili) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
