/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class AOneWayArrows extends PArrows
{
    private TTArrow _tArrow_;
    private PReactant _reactant_;
    private TTComma _tComma_;
    private PReactionRateI _reactionRateI_;
    private TTSemicolon _tSemicolon_;

    public AOneWayArrows()
    {
        // Constructor
    }

    public AOneWayArrows(
        @SuppressWarnings("hiding") TTArrow _tArrow_,
        @SuppressWarnings("hiding") PReactant _reactant_,
        @SuppressWarnings("hiding") TTComma _tComma_,
        @SuppressWarnings("hiding") PReactionRateI _reactionRateI_,
        @SuppressWarnings("hiding") TTSemicolon _tSemicolon_)
    {
        // Constructor
        setTArrow(_tArrow_);

        setReactant(_reactant_);

        setTComma(_tComma_);

        setReactionRateI(_reactionRateI_);

        setTSemicolon(_tSemicolon_);

    }

    @Override
    public Object clone()
    {
        return new AOneWayArrows(
            cloneNode(this._tArrow_),
            cloneNode(this._reactant_),
            cloneNode(this._tComma_),
            cloneNode(this._reactionRateI_),
            cloneNode(this._tSemicolon_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOneWayArrows(this);
    }

    public TTArrow getTArrow()
    {
        return this._tArrow_;
    }

    public void setTArrow(TTArrow node)
    {
        if(this._tArrow_ != null)
        {
            this._tArrow_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tArrow_ = node;
    }

    public PReactant getReactant()
    {
        return this._reactant_;
    }

    public void setReactant(PReactant node)
    {
        if(this._reactant_ != null)
        {
            this._reactant_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._reactant_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    public PReactionRateI getReactionRateI()
    {
        return this._reactionRateI_;
    }

    public void setReactionRateI(PReactionRateI node)
    {
        if(this._reactionRateI_ != null)
        {
            this._reactionRateI_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._reactionRateI_ = node;
    }

    public TTSemicolon getTSemicolon()
    {
        return this._tSemicolon_;
    }

    public void setTSemicolon(TTSemicolon node)
    {
        if(this._tSemicolon_ != null)
        {
            this._tSemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tArrow_)
            + toString(this._reactant_)
            + toString(this._tComma_)
            + toString(this._reactionRateI_)
            + toString(this._tSemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tArrow_ == child)
        {
            this._tArrow_ = null;
            return;
        }

        if(this._reactant_ == child)
        {
            this._reactant_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        if(this._reactionRateI_ == child)
        {
            this._reactionRateI_ = null;
            return;
        }

        if(this._tSemicolon_ == child)
        {
            this._tSemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tArrow_ == oldChild)
        {
            setTArrow((TTArrow) newChild);
            return;
        }

        if(this._reactant_ == oldChild)
        {
            setReactant((PReactant) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        if(this._reactionRateI_ == oldChild)
        {
            setReactionRateI((PReactionRateI) newChild);
            return;
        }

        if(this._tSemicolon_ == oldChild)
        {
            setTSemicolon((TTSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
