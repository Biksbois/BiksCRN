/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class AMultipleLogicalExprs extends PLogicalExprs
{
    private PLogicalExpr _logicalExpr_;
    private PBoolOperator _boolOperator_;
    private PLogicalExprs _logicalExprs_;

    public AMultipleLogicalExprs()
    {
        // Constructor
    }

    public AMultipleLogicalExprs(
        @SuppressWarnings("hiding") PLogicalExpr _logicalExpr_,
        @SuppressWarnings("hiding") PBoolOperator _boolOperator_,
        @SuppressWarnings("hiding") PLogicalExprs _logicalExprs_)
    {
        // Constructor
        setLogicalExpr(_logicalExpr_);

        setBoolOperator(_boolOperator_);

        setLogicalExprs(_logicalExprs_);

    }

    @Override
    public Object clone()
    {
        return new AMultipleLogicalExprs(
            cloneNode(this._logicalExpr_),
            cloneNode(this._boolOperator_),
            cloneNode(this._logicalExprs_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultipleLogicalExprs(this);
    }

    public PLogicalExpr getLogicalExpr()
    {
        return this._logicalExpr_;
    }

    public void setLogicalExpr(PLogicalExpr node)
    {
        if(this._logicalExpr_ != null)
        {
            this._logicalExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._logicalExpr_ = node;
    }

    public PBoolOperator getBoolOperator()
    {
        return this._boolOperator_;
    }

    public void setBoolOperator(PBoolOperator node)
    {
        if(this._boolOperator_ != null)
        {
            this._boolOperator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._boolOperator_ = node;
    }

    public PLogicalExprs getLogicalExprs()
    {
        return this._logicalExprs_;
    }

    public void setLogicalExprs(PLogicalExprs node)
    {
        if(this._logicalExprs_ != null)
        {
            this._logicalExprs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._logicalExprs_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._logicalExpr_)
            + toString(this._boolOperator_)
            + toString(this._logicalExprs_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._logicalExpr_ == child)
        {
            this._logicalExpr_ = null;
            return;
        }

        if(this._boolOperator_ == child)
        {
            this._boolOperator_ = null;
            return;
        }

        if(this._logicalExprs_ == child)
        {
            this._logicalExprs_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._logicalExpr_ == oldChild)
        {
            setLogicalExpr((PLogicalExpr) newChild);
            return;
        }

        if(this._boolOperator_ == oldChild)
        {
            setBoolOperator((PBoolOperator) newChild);
            return;
        }

        if(this._logicalExprs_ == oldChild)
        {
            setLogicalExprs((PLogicalExprs) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
