/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ALoopTitrationContinue extends PTitrationContinue
{
    private TTColon _tColon_;
    private PLoop _loop_;
    private TTComma _tComma_;

    public ALoopTitrationContinue()
    {
        // Constructor
    }

    public ALoopTitrationContinue(
        @SuppressWarnings("hiding") TTColon _tColon_,
        @SuppressWarnings("hiding") PLoop _loop_,
        @SuppressWarnings("hiding") TTComma _tComma_)
    {
        // Constructor
        setTColon(_tColon_);

        setLoop(_loop_);

        setTComma(_tComma_);

    }

    @Override
    public Object clone()
    {
        return new ALoopTitrationContinue(
            cloneNode(this._tColon_),
            cloneNode(this._loop_),
            cloneNode(this._tComma_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALoopTitrationContinue(this);
    }

    public TTColon getTColon()
    {
        return this._tColon_;
    }

    public void setTColon(TTColon node)
    {
        if(this._tColon_ != null)
        {
            this._tColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tColon_ = node;
    }

    public PLoop getLoop()
    {
        return this._loop_;
    }

    public void setLoop(PLoop node)
    {
        if(this._loop_ != null)
        {
            this._loop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._loop_ = node;
    }

    public TTComma getTComma()
    {
        return this._tComma_;
    }

    public void setTComma(TTComma node)
    {
        if(this._tComma_ != null)
        {
            this._tComma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tComma_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tColon_)
            + toString(this._loop_)
            + toString(this._tComma_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tColon_ == child)
        {
            this._tColon_ = null;
            return;
        }

        if(this._loop_ == child)
        {
            this._loop_ = null;
            return;
        }

        if(this._tComma_ == child)
        {
            this._tComma_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tColon_ == oldChild)
        {
            setTColon((TTColon) newChild);
            return;
        }

        if(this._loop_ == oldChild)
        {
            setLoop((PLoop) newChild);
            return;
        }

        if(this._tComma_ == oldChild)
        {
            setTComma((TTComma) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
