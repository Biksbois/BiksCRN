/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ASplitSampleref extends PSampleref
{
    private PProtoexstend _protoexstend_;
    private TTEqual _tEqual_;
    private TTString _tString_;
    private TTDot _tDot_;
    private TTSplitdcl _tSplitdcl_;
    private TTLParen _tLParen_;
    private PFuncParameters _funcParameters_;
    private TTRParen _tRParen_;
    private TTSemicolon _tSemicolon_;

    public ASplitSampleref()
    {
        // Constructor
    }

    public ASplitSampleref(
        @SuppressWarnings("hiding") PProtoexstend _protoexstend_,
        @SuppressWarnings("hiding") TTEqual _tEqual_,
        @SuppressWarnings("hiding") TTString _tString_,
        @SuppressWarnings("hiding") TTDot _tDot_,
        @SuppressWarnings("hiding") TTSplitdcl _tSplitdcl_,
        @SuppressWarnings("hiding") TTLParen _tLParen_,
        @SuppressWarnings("hiding") PFuncParameters _funcParameters_,
        @SuppressWarnings("hiding") TTRParen _tRParen_,
        @SuppressWarnings("hiding") TTSemicolon _tSemicolon_)
    {
        // Constructor
        setProtoexstend(_protoexstend_);

        setTEqual(_tEqual_);

        setTString(_tString_);

        setTDot(_tDot_);

        setTSplitdcl(_tSplitdcl_);

        setTLParen(_tLParen_);

        setFuncParameters(_funcParameters_);

        setTRParen(_tRParen_);

        setTSemicolon(_tSemicolon_);

    }

    @Override
    public Object clone()
    {
        return new ASplitSampleref(
            cloneNode(this._protoexstend_),
            cloneNode(this._tEqual_),
            cloneNode(this._tString_),
            cloneNode(this._tDot_),
            cloneNode(this._tSplitdcl_),
            cloneNode(this._tLParen_),
            cloneNode(this._funcParameters_),
            cloneNode(this._tRParen_),
            cloneNode(this._tSemicolon_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASplitSampleref(this);
    }

    public PProtoexstend getProtoexstend()
    {
        return this._protoexstend_;
    }

    public void setProtoexstend(PProtoexstend node)
    {
        if(this._protoexstend_ != null)
        {
            this._protoexstend_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._protoexstend_ = node;
    }

    public TTEqual getTEqual()
    {
        return this._tEqual_;
    }

    public void setTEqual(TTEqual node)
    {
        if(this._tEqual_ != null)
        {
            this._tEqual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tEqual_ = node;
    }

    public TTString getTString()
    {
        return this._tString_;
    }

    public void setTString(TTString node)
    {
        if(this._tString_ != null)
        {
            this._tString_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tString_ = node;
    }

    public TTDot getTDot()
    {
        return this._tDot_;
    }

    public void setTDot(TTDot node)
    {
        if(this._tDot_ != null)
        {
            this._tDot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tDot_ = node;
    }

    public TTSplitdcl getTSplitdcl()
    {
        return this._tSplitdcl_;
    }

    public void setTSplitdcl(TTSplitdcl node)
    {
        if(this._tSplitdcl_ != null)
        {
            this._tSplitdcl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSplitdcl_ = node;
    }

    public TTLParen getTLParen()
    {
        return this._tLParen_;
    }

    public void setTLParen(TTLParen node)
    {
        if(this._tLParen_ != null)
        {
            this._tLParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tLParen_ = node;
    }

    public PFuncParameters getFuncParameters()
    {
        return this._funcParameters_;
    }

    public void setFuncParameters(PFuncParameters node)
    {
        if(this._funcParameters_ != null)
        {
            this._funcParameters_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._funcParameters_ = node;
    }

    public TTRParen getTRParen()
    {
        return this._tRParen_;
    }

    public void setTRParen(TTRParen node)
    {
        if(this._tRParen_ != null)
        {
            this._tRParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tRParen_ = node;
    }

    public TTSemicolon getTSemicolon()
    {
        return this._tSemicolon_;
    }

    public void setTSemicolon(TTSemicolon node)
    {
        if(this._tSemicolon_ != null)
        {
            this._tSemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._protoexstend_)
            + toString(this._tEqual_)
            + toString(this._tString_)
            + toString(this._tDot_)
            + toString(this._tSplitdcl_)
            + toString(this._tLParen_)
            + toString(this._funcParameters_)
            + toString(this._tRParen_)
            + toString(this._tSemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._protoexstend_ == child)
        {
            this._protoexstend_ = null;
            return;
        }

        if(this._tEqual_ == child)
        {
            this._tEqual_ = null;
            return;
        }

        if(this._tString_ == child)
        {
            this._tString_ = null;
            return;
        }

        if(this._tDot_ == child)
        {
            this._tDot_ = null;
            return;
        }

        if(this._tSplitdcl_ == child)
        {
            this._tSplitdcl_ = null;
            return;
        }

        if(this._tLParen_ == child)
        {
            this._tLParen_ = null;
            return;
        }

        if(this._funcParameters_ == child)
        {
            this._funcParameters_ = null;
            return;
        }

        if(this._tRParen_ == child)
        {
            this._tRParen_ = null;
            return;
        }

        if(this._tSemicolon_ == child)
        {
            this._tSemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._protoexstend_ == oldChild)
        {
            setProtoexstend((PProtoexstend) newChild);
            return;
        }

        if(this._tEqual_ == oldChild)
        {
            setTEqual((TTEqual) newChild);
            return;
        }

        if(this._tString_ == oldChild)
        {
            setTString((TTString) newChild);
            return;
        }

        if(this._tDot_ == oldChild)
        {
            setTDot((TTDot) newChild);
            return;
        }

        if(this._tSplitdcl_ == oldChild)
        {
            setTSplitdcl((TTSplitdcl) newChild);
            return;
        }

        if(this._tLParen_ == oldChild)
        {
            setTLParen((TTLParen) newChild);
            return;
        }

        if(this._funcParameters_ == oldChild)
        {
            setFuncParameters((PFuncParameters) newChild);
            return;
        }

        if(this._tRParen_ == oldChild)
        {
            setTRParen((TTRParen) newChild);
            return;
        }

        if(this._tSemicolon_ == oldChild)
        {
            setTSemicolon((TTSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
