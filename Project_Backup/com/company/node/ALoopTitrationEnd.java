/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ALoopTitrationEnd extends PTitrationEnd
{
    private TTColon _tColon_;
    private PLoop _loop_;
    private TTSemicolon _tSemicolon_;

    public ALoopTitrationEnd()
    {
        // Constructor
    }

    public ALoopTitrationEnd(
        @SuppressWarnings("hiding") TTColon _tColon_,
        @SuppressWarnings("hiding") PLoop _loop_,
        @SuppressWarnings("hiding") TTSemicolon _tSemicolon_)
    {
        // Constructor
        setTColon(_tColon_);

        setLoop(_loop_);

        setTSemicolon(_tSemicolon_);

    }

    @Override
    public Object clone()
    {
        return new ALoopTitrationEnd(
            cloneNode(this._tColon_),
            cloneNode(this._loop_),
            cloneNode(this._tSemicolon_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALoopTitrationEnd(this);
    }

    public TTColon getTColon()
    {
        return this._tColon_;
    }

    public void setTColon(TTColon node)
    {
        if(this._tColon_ != null)
        {
            this._tColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tColon_ = node;
    }

    public PLoop getLoop()
    {
        return this._loop_;
    }

    public void setLoop(PLoop node)
    {
        if(this._loop_ != null)
        {
            this._loop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._loop_ = node;
    }

    public TTSemicolon getTSemicolon()
    {
        return this._tSemicolon_;
    }

    public void setTSemicolon(TTSemicolon node)
    {
        if(this._tSemicolon_ != null)
        {
            this._tSemicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tSemicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tColon_)
            + toString(this._loop_)
            + toString(this._tSemicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tColon_ == child)
        {
            this._tColon_ = null;
            return;
        }

        if(this._loop_ == child)
        {
            this._loop_ = null;
            return;
        }

        if(this._tSemicolon_ == child)
        {
            this._tSemicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tColon_ == oldChild)
        {
            setTColon((TTColon) newChild);
            return;
        }

        if(this._loop_ == oldChild)
        {
            setLoop((PLoop) newChild);
            return;
        }

        if(this._tSemicolon_ == oldChild)
        {
            setTSemicolon((TTSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
