/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ADclTitration extends PTitration
{
    private PTitrationdcl _titrationdcl_;
    private TTEqual _tEqual_;
    private PTitrations _titrations_;

    public ADclTitration()
    {
        // Constructor
    }

    public ADclTitration(
        @SuppressWarnings("hiding") PTitrationdcl _titrationdcl_,
        @SuppressWarnings("hiding") TTEqual _tEqual_,
        @SuppressWarnings("hiding") PTitrations _titrations_)
    {
        // Constructor
        setTitrationdcl(_titrationdcl_);

        setTEqual(_tEqual_);

        setTitrations(_titrations_);

    }

    @Override
    public Object clone()
    {
        return new ADclTitration(
            cloneNode(this._titrationdcl_),
            cloneNode(this._tEqual_),
            cloneNode(this._titrations_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADclTitration(this);
    }

    public PTitrationdcl getTitrationdcl()
    {
        return this._titrationdcl_;
    }

    public void setTitrationdcl(PTitrationdcl node)
    {
        if(this._titrationdcl_ != null)
        {
            this._titrationdcl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._titrationdcl_ = node;
    }

    public TTEqual getTEqual()
    {
        return this._tEqual_;
    }

    public void setTEqual(TTEqual node)
    {
        if(this._tEqual_ != null)
        {
            this._tEqual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tEqual_ = node;
    }

    public PTitrations getTitrations()
    {
        return this._titrations_;
    }

    public void setTitrations(PTitrations node)
    {
        if(this._titrations_ != null)
        {
            this._titrations_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._titrations_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._titrationdcl_)
            + toString(this._tEqual_)
            + toString(this._titrations_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._titrationdcl_ == child)
        {
            this._titrationdcl_ = null;
            return;
        }

        if(this._tEqual_ == child)
        {
            this._tEqual_ = null;
            return;
        }

        if(this._titrations_ == child)
        {
            this._titrations_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._titrationdcl_ == oldChild)
        {
            setTitrationdcl((PTitrationdcl) newChild);
            return;
        }

        if(this._tEqual_ == oldChild)
        {
            setTEqual((TTEqual) newChild);
            return;
        }

        if(this._titrations_ == oldChild)
        {
            setTitrations((PTitrations) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
