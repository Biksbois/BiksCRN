/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.company.node;

import com.company.analysis.*;

@SuppressWarnings("nls")
public final class ATitsSamplebody extends PSamplebody
{
    private PTitration _titration_;

    public ATitsSamplebody()
    {
        // Constructor
    }

    public ATitsSamplebody(
        @SuppressWarnings("hiding") PTitration _titration_)
    {
        // Constructor
        setTitration(_titration_);

    }

    @Override
    public Object clone()
    {
        return new ATitsSamplebody(
            cloneNode(this._titration_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATitsSamplebody(this);
    }

    public PTitration getTitration()
    {
        return this._titration_;
    }

    public void setTitration(PTitration node)
    {
        if(this._titration_ != null)
        {
            this._titration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._titration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._titration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._titration_ == child)
        {
            this._titration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._titration_ == oldChild)
        {
            setTitration((PTitration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
